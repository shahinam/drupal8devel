# Schema for the configuration files of the Rules module.

rules.component.*:
  type: config_entity
  label: 'Rules component'
  mapping:
    id:
      type: string
      label: 'ID'
    label:
      type: label
      label: 'Label'
    module:
      type: string
      label: 'Module'
    description:
      type: text
      label: 'Administrative description'
    tag:
      type: string
      label: 'Tag'
    core:
      type: string
      label: 'Drupal version'
    expression_id:
      type: string
      label: 'Rules expression plugin ID'
    configuration:
      type: rules_expression.[%parent.expression_id]
      label: 'Configuration'

rules.reaction.*:
  type: config_entity
  label: 'Reaction rule'
  mapping:
    id:
      type: string
      label: 'ID'
    label:
      type: label
      label: 'Label'
    event:
      type: string
      label: 'Event'
    module:
      type: string
      label: 'Module'
    description:
      type: text
      label: 'Administrative description'
    tag:
      type: string
      label: 'Tag'
    core:
      type: string
      label: 'Drupal version'
    expression_id:
      type: string
      label: 'Rules expression plugin ID'
    configuration:
      type: rules_expression.[%parent.expression_id]
      label: 'Configuration'

rules_expression:
  type: mapping
  label: 'Rules expression'
  id:
    type: string
    label: 'Plugin ID'

rules_expression.rules_condition:
  type: rules_expression
  label: "Rules condition configuration"
  mapping:
    id:
      type: string
      label: 'Plugin ID'
    condition_id:
      type: string
      label: 'Condition plugin ID'
    negate:
      type: boolean
      label: 'Negated'

rules_expression.rules_action:
  type: rules_expression
  label: "Rules action configuration"
  mapping:
    id:
      type: string
      label: 'Plugin ID'
    action_id:
      type: string
      label: 'Action plugin ID'

rules_expression.rules_and:
  type: rules_expression
  label: 'Rules And'
  mapping:
    id:
      type: string
      label: 'Plugin ID'
    negate:
      type: boolean
      label: 'Negate'
    conditions:
      type: sequence
      label: 'Conditions'
      sequence:
        - type: rules_expression.[id]

rules_expression.rules_action_set:
  type: rules_expression
  label: 'Action set'
  mapping:
    id:
      type: string
      label: 'Plugin ID'
    actions:
      type: sequence
      label: 'Actions'
      sequence:
        - type: rules_expression.[id]

rules_expression.rules_rule:
  type: rules_expression
  label: "Rule"
  mapping:
    id:
      type: string
      label: 'Plugin ID'
    context_definitions:
      type: sequence
      label: 'Context definitions'
      sequence:
        - type: rules.context.definition
    conditions:
      type: rules_expression.[id]
      label: 'Conditions'
    actions:
      type: rules_expression.[id]
      label: 'Actions'

rules_expression.rules_reaction_rule:
  type: rules_expression
  label: "Reaction Rule"
  mapping:
    id:
      type: string
      label: 'Plugin ID'
    event:
      type: string
      label: 'Event'
    conditions:
      type: rules_expression.[id]
      label: 'Conditions'
    actions:
      type: rules_expression.[id]
      label: 'Actions'

rules.context.definition:
  type: mapping
  label: 'Context definition'
  mapping:
    type:
      type: string
      label: 'Type'
    label:
      type: string
      label: 'Label'

rules.settings:
  type: config_object
  label: 'Rules settings'
  mapping:
    log_errors:
      type: integer
      label: 'Logging of Rules evaluation errors'
    debug_log:
      type: boolean
      label: 'Log debug information to the available loggers'
    debug:
      type: boolean
      label: 'Show debug information'
    log_level:
      type: integer
      label: 'Log level'
